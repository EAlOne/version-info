package ru.ealone.gradle.plugins.versioninfo.task;

import org.gradle.api.DefaultTask;
import ru.ealone.gradle.plugins.versioninfo.version.FilePropertiesSupplier;
import ru.ealone.gradle.plugins.versioninfo.version.PropertiesSupplier;
import ru.ealone.gradle.plugins.versioninfo.version.Version;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Properties;

public abstract class VersionTask extends DefaultTask {
    private static final String DEFAULT_FILE_NAME = "version.properties";

    private Version version;

    private void loadVersion() {
        PropertiesSupplier propertiesSupplier = new FilePropertiesSupplier(DEFAULT_FILE_NAME);

        Properties versionProperties = propertiesSupplier.get();
        if (versionProperties == null) {
            throw new IllegalStateException("File " + DEFAULT_FILE_NAME + " not found, or have some problem");
        }
        this.version = new Version(versionProperties);
    }

    private void storeVersion() throws IOException {
        File file = new File(DEFAULT_FILE_NAME);
        try (FileOutputStream fileOutputStream = new FileOutputStream(file)) {
            this.version.saveToProperties().store(fileOutputStream, "Generated by Version Info Plugin for Gradle");
        }
    }

    public Version getVersion() {
        if (this.version == null) {
            this.loadVersion();
        }
        return this.version;
    }

    public void setVersion(Version version) throws IOException {
        this.version = version;
        this.storeVersion();
    }
}
